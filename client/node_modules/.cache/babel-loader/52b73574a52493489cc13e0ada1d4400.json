{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\domin\\\\Desktop\\\\watt\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { createPost, updatePost } from '../../actions/posts';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //not to get a refresh in the browser\n\n    if (currentId) {\n      dispatch(updatePost(currentId, postData));\n    } else {\n      dispatch(createPost(postData));\n    }\n\n    clear();\n  };\n\n  const clear = () => {\n    setCurrentId(null);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root}${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? 'Edit' : 'Create', \" a post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => setPostData({ ...postData,\n          tags: e.target.value.split(',')\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"lT9nNGpYaD7S4Bzai+c+CHGKe7c=\", false, function () {\n  return [useSelector, useDispatch, useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/domin/Desktop/watt/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","FileBase","useStyles","useDispatch","createPost","updatePost","useSelector","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","p","_id","dispatch","classes","handleSubmit","e","preventDefault","clear","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\r\nimport FileBase from 'react-file-base64'\r\nimport useStyles from './styles'\r\nimport { useDispatch } from 'react-redux'\r\nimport { createPost, updatePost } from '../../actions/posts'\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    const post = useSelector((state) => (currentId ? state.posts.find((p) => p._id === currentId) : null));\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        if (post) setPostData(post);\r\n    }, [post])\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //not to get a refresh in the browser\r\n\r\n        if (currentId) {\r\n            dispatch(updatePost(currentId, postData));\r\n        }\r\n        else {\r\n            dispatch(createPost(postData))\r\n        }\r\n        clear();\r\n    }\r\n    const clear = () => {\r\n        setCurrentId(null);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' });\r\n    }\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root}${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? 'Edit' : 'Create'} a post</Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })} />\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })} />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n\r\n            </form>\r\n\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}